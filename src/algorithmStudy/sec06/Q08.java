package algorithmStudy.sec06;

import java.util.*;

/*이분검색 (등호 잘 쓸 것!!!)
설명
임의의 N개의 숫자가 입력으로 주어집니다. N개의 수를 오름차순으로 정렬한 다음 N개의 수 중 한 개의 수인 M이 주어지면
이분검색으로 M이 정렬된 상태에서 몇 번째에 있는지 구하는 프로그램을 작성하세요. 단 중복값은 존재하지 않습니다.
입력
첫 줄에 한 줄에 자연수 N(3<=N<=1,000,000)과 M이 주어집니다.
두 번째 줄에 N개의 수가 공백을 사이에 두고 주어집니다.
출력
첫 줄에 정렬 후 M의 값의 위치 번호를 출력한다.*/
//내 답이랑 강사 답 동일

public class Q08 {
	public int Solution(int n, int find, int[] arr) {
		Arrays.sort(arr);
		int high = arr.length - 1;
		int low = 0;
		int idx = 0;
		while (low <= high) {
			int mid = (high + low) / 2;
			if (arr[mid] < find) {
				low = mid + 1;
			} else if (arr[mid] > find) {
				high = mid - 1;
			} else {
				idx = mid + 1;
				break;
			}
		}

		return idx;
	}

	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int n = in.nextInt();
		int find = in.nextInt();
		int[] arr = new int[n];
		for (int i = 0; i < n; i++) {
			arr[i] = in.nextInt();
		}
		Q08 m = new Q08();
		System.out.println(m.Solution(n, find, arr));
	}
}
